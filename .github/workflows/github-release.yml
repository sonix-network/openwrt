name: Create GitHub release

permissions:
  contents: write

on:
  push:
    branches:
      - "viptela-vedge1000"
  schedule:
    # Build every week (sunday midnight)
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  release:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: |
          echo "version_number=$(date +%Y-%m-%d).${{github.run_number}}" >> $GITHUB_OUTPUT

      - name: Setup toolchain
        id: toolchain
        run: |
          set -euo pipefail
          ver=$(curl -s https://downloads.openwrt.org/snapshots/targets/octeon/generic/sha256sums | awk '/openwrt-toolchain/ {print $2}' | sed -s 's/*//')
          echo "Latest toolchain available is ${ver}"
          curl "https://downloads.openwrt.org/snapshots/targets/octeon/generic/${ver}" -o toolchain.tar.zst
          tar -xvf toolchain.tar.zst
          rm -f toolchain.tar.zst
          mkdir toolchain/
          tar -C toolchain -xvf toolchain.tar.zst '*/toolchain-*/' --strip-components=2
      - name: Compile
        id: compile
        run: |
          set -euo pipefail
          set -x
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cp -v sonix/diffconfig .config
          sed -i "s/SONIX-GIT/SONIX-${{ steps.vars.outputs.version_number }}/g" .config
          make defconfig
          ./scripts/ext-toolchain.sh --toolchain $PWD/toolchain/ --overwrite-config --config octeon/generic
          make -j$(nproc) download
          make clean
          make -j$(nproc) world || (echo '!!! Failed, rebuilding with verbose logs'; make world V=sc)
          make json_overview_image_info
          cp -v .config bin/targets/octeon/generic/openwrt-octeon-generic-cisco_vedge1000.config
          cat bin/targets/octeon/generic/profiles.json | jq > bin/targets/octeon/generic/openwrt-octeon-generic-cisco_vedge1000.json
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: "v${{ steps.vars.outputs.version_number }}"
          prerelease: true
          tag_name: "v${{ steps.vars.outputs.version_number }}"
          files: |
            bin/targets/octeon/generic/openwrt-*
